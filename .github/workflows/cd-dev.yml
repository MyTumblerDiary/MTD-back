name: Deploy to Dev
on:
  push:
    branches:
      - dev
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install --concurrency 4
        working-directory: ./

      - name: Build the application
        run: yarn build
        working-directory: ./
      - name: Connect to EC2
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Git pull
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ELASTIC_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22

          script: |
            cd /home/ubuntu/MTD-back 
            if git pull origin dev; then
              echo "Git pulled successfully"
            else
              echo "Git pulled failed" && exit 1
            fi
      - name: Copy the Application to the EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ELASTIC_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          source: ./
          target: /home/ubuntu/MTD-back
          port: 22

      - name: Restart the Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ELASTIC_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd ~/MTD-back &&
            docker stop mtd-back_my-backend_1 &&
            docker build -t my-backend . &&
            yarn docker-up-server &&
            docker restart mtd-back_my-backend_1
